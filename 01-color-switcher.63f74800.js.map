{"mappings":"sEACAA,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAyBC,EAAUC,GAC/B,KAAMD,aAAoBC,GACtB,MAAM,IAAIC,UAAU,oC,WCG5B,SAASC,EAAkBC,EAAQC,GAC/B,IAAI,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAI,CACjC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDhB,OAAOC,eAAeQ,EAAQI,EAAWI,IAAKJ,E,EAftDb,OAAOC,eAAeiB,EAAS,aAAc,CACzCf,OAAO,IAEXe,EAAQd,QACR,SAAsBE,EAAaa,EAAYC,GACvCD,GAAYX,EAAkBF,EAAYe,UAAWF,GACrDC,GAAaZ,EAAkBF,EAAac,GAChD,OAAOd,C,ECGX,IAAMgB,EAAO,CACXC,SAAUC,SAASC,cAAc,sBACjCC,QAASF,SAASC,cAAc,sBAWlC,IAgCME,EAAgB,IAAnB,W,sBAhCGC,EACQC,G,aACVC,KAAKC,WAAa,KAClBD,KAAKE,UAAW,EAChBF,KAAKG,kBAAoBJ,EACzBP,EAAKI,QAAQQ,UAAW,C,iBAG1BjB,IAAA,qB,MAAA,WACMa,KAAKE,WAITV,EAAKC,SAASW,UAAW,EACzBZ,EAAKI,QAAQQ,UAAW,EAExBJ,KAAKE,UAAW,EAChBF,KAAKC,WAAaI,aAChB,W,OAtBqBC,EAHlB,IAAsDC,OAAlDC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,UAIzDjB,SAASkB,KAAKC,MAAMC,gBAAkBR,GADxC,IAA2BA,C,GAuBrB,K,IAIJnB,IAAA,oB,MAAA,WACEK,EAAKC,SAASW,UAAW,EACzBZ,EAAKI,QAAQQ,UAAW,EAExBW,cAAcf,KAAKC,YACnBD,KAAKE,UAAW,C,OAIjB,IAEHV,EAAKC,SAASuB,iBAAiB,SAAS,W,OACtCnB,EAAcoB,oB,IAEhBzB,EAAKI,QAAQoB,iBAAiB,SAAS,W,OAAMnB,EAAcqB,mB","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","src/js/01-color-switcher.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","// Напиши скрипт, который после нажатия кнопки «Start», раз в секунду меняет цвет фона <body> на случайное значение используя инлайн стиль. При нажатии на кнопку «Stop», изменение цвета фона должно останавливаться.\n\n// ВНИМАНИЕ\n// Учти, на кнопку «Start» можно нажать бесконечное количество раз. Сделай так, чтобы пока изменение темы запушено, кнопка «Start» была не активна (disabled).\n\n// Для генерации случайного цвета используй функцию getRandomHexColor.\n\n// function getRandomHexColor() {\n//   return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n// }\n\nconst refs = {\n  startBtn: document.querySelector('button[data-start]'),\n  stopBtn: document.querySelector('button[data-stop]'),\n};\n\nfunction getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\nfunction updateBodyBGcolor(color) {\n  document.body.style.backgroundColor = color;\n}\n\nclass ColorSwitcher {\n  constructor(updateBodyBGcolor) {\n    this.intervalID = null;\n    this.isActive = false;\n    this.updateBodyBGcolor = updateBodyBGcolor;\n    refs.stopBtn.disabled = true;\n  }\n\n  startChangeBGcolor() {\n    if (this.isActive) {\n      return;\n    }\n\n    refs.startBtn.disabled = true;\n    refs.stopBtn.disabled = false;\n\n    this.isActive = true;\n    this.intervalID = setInterval(\n      () => updateBodyBGcolor(getRandomHexColor()),\n      1000\n    );\n  }\n\n  stopChangeBGcolor() {\n    refs.startBtn.disabled = false;\n    refs.stopBtn.disabled = true;\n\n    clearInterval(this.intervalID);\n    this.isActive = false;\n  }\n}\n\nconst colorSwitcher = new ColorSwitcher();\n\nrefs.startBtn.addEventListener('click', () =>\n  colorSwitcher.startChangeBGcolor()\n);\nrefs.stopBtn.addEventListener('click', () => colorSwitcher.stopChangeBGcolor());"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$2ec2bf6e450c0fe9$var$refs","startBtn","document","querySelector","stopBtn","$2ec2bf6e450c0fe9$var$colorSwitcher","ColorSwitcher","updateBodyBGcolor1","this","intervalID","isActive","updateBodyBGcolor","disabled","setInterval","color","concat","Math","floor","random","toString","body","style","backgroundColor","clearInterval","addEventListener","startChangeBGcolor","stopChangeBGcolor"],"version":3,"file":"01-color-switcher.63f74800.js.map"}